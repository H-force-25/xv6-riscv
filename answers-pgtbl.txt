1:通过对exec函数的分析，首先从内存中加载程序到第一个页表中，所以page 0 包含一个进程需要的信息；然后，exec函数在紧接着的页表中分配两页，page 1 是守护页面，page 2 是进程栈页面，该栈里存放程序运行时的变量。因为page 1是守护页面，用户不能访问。倒数三页分别是跳板页面，转储页面和用户和内存的共享页面。
3:三个 return -1 的条件分别为 srcva >= p->sz, srcva+len >= p->sz 和 srcva+len < srcva. 很显然, 此处第三个条件主要是进行溢出检测, 防止无符号整数上溢. 由于 srcva 和 len 均为 uint64 类型的变量, 当 srcva 小于 p->sz 但是 len 为一个极大的数时, 如 0xffff...ffff(即对应 -1), 由于无符号整数溢出便可以满足 srcva+len < p->sz 这一条件, 但实际上复制了大量内存. 但通过 srcva+len < srcva 这一判断条件能够检测出溢出.
